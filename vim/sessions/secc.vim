" ~/dotfiles/vim/sessions/secc.vim:
" Vim session script.
" Created by session.vim 2.13 on 02 October 2015 at 16:17:20.
" Open this file in Vim and run :source % to restore your session.

set guioptions=aegit
silent! set guifont=Monospace\ 11
if exists('g:syntax_on') != 1 | syntax on | endif
if exists('g:did_load_filetypes') != 1 | filetype on | endif
if exists('g:did_load_ftplugin') != 1 | filetype plugin on | endif
if exists('g:did_indent_on') != 1 | filetype indent on | endif
if &background != 'dark'
	set background=dark
endif
if !exists('g:colors_name') || g:colors_name != 'railscasts' | colorscheme railscasts | endif
call setqflist([])
let SessionLoad = 1
if &cp | set nocp | endif
let s:so_save = &so | let s:siso_save = &siso | set so=0 siso=0
let v:this_session=expand("<sfile>:p")
silent only
cd ~/
if expand('%') == '' && !&modified && line('$') <= 1 && getline(1) == ''
  let s:wipebuf = bufnr('%')
endif
set shortmess=aoO
badd +72 repos/work/secc/grails-app/views/home/processor.gsp
badd +2 dotfiles/vim/after.vimrc
badd +42 repos/work/secc/grails-app/views/designation/list.gsp
badd +1 repos/work/secc/grails-app/views/designation/index.gsp
badd +128 repos/work/secc/grails-app/controllers/secc/DesignationController.groovy
badd +109 repos/work/secc/grails-app/controllers/secc/HomeController.groovy
badd +24 repos/work/secc/grails-app/domain/secc/User.groovy
badd +20 repos/work/secc/grails-app/conf/secc/AccessFilters.groovy
badd +145 repos/work/secc/grails-app/conf/Config.groovy
badd +88 repos/work/secc/grails-app/conf/BuildConfig.groovy
badd +47 repos/work/geip/grails-app/conf/BuildConfig.groovy
badd +117 repos/svn/tps/trunk/grails-app/conf/BuildConfig.groovy
badd +1 repos/svn/pto/trunk/grails-app/conf/BuildConfig.groovy
badd +18 repos/svn/pto/trunk/application.properties
badd +1 repos/svn/pto/trunk/grails-app/conf/Config.groovy
badd +8 repos/svn/pto/trunk/grails-app/conf/spring/resources.groovy
badd +104 repos/work/secc/grails-app/conf/DataSource.groovy
badd +1 dotfiles/vim/extra.vimrc
badd +75 \[Vundle]\ Installer
badd +38 repos/work/secc/grails-app/conf/BootStrap.groovy
badd +80 repos/work/secc/grails-app/services/secc/AdminService.groovy
badd +31 repos/work/secc/grails-app/domain/secc/Employee.groovy
badd +24 repos/work/secc/src/groovy/secc/SecureUser.groovy
badd +1 repos/work/secc/grails-app/domain/secc/Designation.groovy
badd +13 repos/work/secc/grails-app/services/secc/DesignationService.groovy
badd +40 repos/work/secc/grails-app/domain/secc/Period.groovy
argglobal
silent! argdel *
edit repos/work/secc/grails-app/conf/DataSource.groovy
set splitbelow splitright
wincmd _ | wincmd |
vsplit
wincmd _ | wincmd |
vsplit
2wincmd h
wincmd w
wincmd w
set nosplitbelow
set nosplitright
wincmd t
set winheight=1 winwidth=1
exe 'vert 1resize ' . ((&columns * 37 + 127) / 255)
exe 'vert 2resize ' . ((&columns * 108 + 127) / 255)
exe 'vert 3resize ' . ((&columns * 108 + 127) / 255)
argglobal
enew
" file NERD_tree_1
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal nofen
wincmd w
argglobal
setlocal fdm=syntax
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal fen
let s:l = 120 - ((24 * winheight(0) + 26) / 53)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
120
normal! 038|
wincmd w
argglobal
edit repos/work/secc/grails-app/conf/BootStrap.groovy
setlocal fdm=syntax
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal fen
let s:l = 52 - ((36 * winheight(0) + 26) / 53)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
52
normal! 0
wincmd w
2wincmd w
exe 'vert 1resize ' . ((&columns * 37 + 127) / 255)
exe 'vert 2resize ' . ((&columns * 108 + 127) / 255)
exe 'vert 3resize ' . ((&columns * 108 + 127) / 255)
tabnext 1
if exists('s:wipebuf')
"   silent exe 'bwipe ' . s:wipebuf
endif
" unlet! s:wipebuf
set winheight=1 winwidth=83 shortmess=filnxtToO
let s:sx = expand("<sfile>:p:r")."x.vim"
if file_readable(s:sx)
  exe "source " . fnameescape(s:sx)
endif
let &so = s:so_save | let &siso = s:siso_save

" Support for special windows like quick-fix and plug-in windows.
" Everything down here is generated by vim-session (not supported
" by :mksession out of the box).

1wincmd w
tabnext 1
let s:bufnr_save = bufnr("%")
let s:cwd_save = getcwd()
NERDTree ~/repos/work/secc
if !getbufvar(s:bufnr_save, '&modified')
  let s:wipebuflines = getbufline(s:bufnr_save, 1, '$')
  if len(s:wipebuflines) <= 1 && empty(get(s:wipebuflines, 0, ''))
    silent execute 'bwipeout' s:bufnr_save
  endif
endif
execute "cd" fnameescape(s:cwd_save)
1resize 53|vert 1resize 37|2resize 53|vert 2resize 108|3resize 53|vert 3resize 108|
2wincmd w
tabnext 1
if exists('s:wipebuf')
  if empty(bufname(s:wipebuf))
if !getbufvar(s:wipebuf, '&modified')
  let s:wipebuflines = getbufline(s:wipebuf, 1, '$')
  if len(s:wipebuflines) <= 1 && empty(get(s:wipebuflines, 0, ''))
    silent execute 'bwipeout' s:wipebuf
  endif
endif
  endif
endif
doautoall SessionLoadPost
unlet SessionLoad
" vim: ft=vim ro nowrap smc=128
